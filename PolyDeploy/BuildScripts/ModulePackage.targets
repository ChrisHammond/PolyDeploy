<?xml version="1.0" encoding="windows-1252"?>

<!-- WARNING, WARNING, WARNING -->
<!-- REMEMBER THAT IF YOU MODIFY THE TARGETS FILE YOU NEED TO CLOSE/OPEN THE PROJECT FOR THE CHANGES TO TAKE EFFECT -->

<!--This buildscript requires both MSBuildCommunityTasks < http://msbuildtasks.tigris.org/ > and DotNetNuke Build Tasks < http://msbuilddnntasks.codeplex.com/ > to be installed-->
<Project ToolsVersion="3.5" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets" Condition="Exists('$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets')"/>
    <Import Project="$(MSBuildExtensionsPath)\MSBuildDotNetNukeTasks\MSBuild.DotNetNuke.Tasks.Targets" Condition="Exists('$(MSBuildExtensionsPath)\MSBuildDotNetNukeTasks\MSBuild.DotNetNuke.Tasks.Targets')"/>
    <PropertyGroup>
        <ModuleName>$(MSBuildProjectName)</ModuleName>
        <PackageName>Cantarus_$(ModuleName)</PackageName>
        <BuildScriptsPath>$(MSBuildProjectDirectory)\BuildScripts</BuildScriptsPath>
        <WebsitePath>$(MSBuildProjectDirectory)\..\..\Website</WebsitePath>
        <PackagePath>$(MSBuildProjectDirectory)\..\..\CompiledModules</PackagePath>
        <WebsiteModulePath>$(WebsitePath)\DesktopModules\Cantarus\$(ModuleName)</WebsiteModulePath>
        <ModuleBinPath>$(MSBuildProjectDirectory)\$(OutputPath)</ModuleBinPath>
        <PackageTempPath>$(MSBuildProjectDirectory)\Package</PackageTempPath>
        <ResourceZip>Resources.zip</ResourceZip>
        <InstallPackage>$(PackageName)_$(Version)_Install.zip</InstallPackage>
        <DNNFileName>$(ModuleName).dnn</DNNFileName>

        <TempBuildPath>$(MSBuildProjectDirectory)\msbuild-tmp</TempBuildPath>
    </PropertyGroup>
    <Target Name="BeforeBuild" >
        <!--This target is empty on purpose-->
        <Message Text="MSBUILD: running under $(Configuration)|$(Platform) configuration" Importance="high"></Message>
    </Target>
    <Target Name="AfterBuild" DependsOnTargets="GetFiles;CopyAngular;CopyBin;DebugProject;UpdateComponents;PackageModule;">
        <!--This target is empty on purpose, and is just used to trigger the other targets-->
    </Target>

    <!-- Get Files -->
    <!-- Gather all the files we will need to complete our build tasks. -->
    <Target Name="GetFiles">
        <ItemGroup>
            <TextFiles Include="$(TempBuildPath)\*.txt" Exclude="license.txt;releasenotes.txt" />
            <SourceFiles Include="$(TempBuildPath)\*.ascx; *.asmx;*.js;*.css" />
            <ResourceFiles Include="$(TempBuildPath)\App_LocalResources\*.resx" />
            <JsFiles Include="$(TempBuildPath)\js\*.*" />
            <ConfigFiles Include="$(TempBuildPath)\*.config" />
            <Images Include="$(TempBuildPath)\Images\*.*" />
            <BinFiles Include="bin\*.dll" />
            <Resources Include="@(ResourceFiles);@(SourceFiles);@(Images);@(ConfigFiles);@(TextFiles);@(JsFiles)" />
            <DebugSourceFiles Include="$(TempBuildPath)\**\*.*" Exclude="$(TempBuildPath)\obj\**\*;$(TempBuildPath)\**\_ReSharper*\**;$(TempBuildPath)\bin\**;$(TempBuildPath)\**\*.cs;$(TempBuildPath)\**\*.csproj;$(TempBuildPath)\**\*.user;$(TempBuildPath)\**\packages\**;$(TempBuildPath)\**\BuildScripts\**;" />
            
            <!-- These purposfully doesn't use $(TempBuildPath) as they are used in scenarios where the temp build directory may not exist (e.g. under the 'Angular' configuration). -->
            <CssFiles Include="$(MSBuildProjectDirectory)\css\**\*.css" />
            <ImageFiles Include ="$(MSBuildProjectDirectory)\img\**\*.jpg;$(MSBuildProjectDirectory)\img\**\*.png" />
            <AngularAppFiles Include="$(MSBuildProjectDirectory)\Angular\dist\**\*" />
            <AscxFiles Include="$(MSBuildProjectDirectory)\*.ascx" />
            <HtmlFiles Include="$(MsBuildProjectDirectory)\Angular\src\**\*.html" />
        </ItemGroup>
    </Target>

    <!-- Angular Quick Development -->
    <!-- Copies client side resources. Runs when configuration is set to 'Angular' or 'Debug'. -->
    <Target Name="CopyAngular" Condition="'$(Configuration)|$(Platform)' == 'Angular|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Debug|AnyCPU'">

      <!-- Copy Angular.  -->
      <Message Text="MSBUILD: copying @(AngularAppFiles) to $(WebsiteModulePath)\Angular\dist\" Importance="high"></Message>
      <Copy SourceFiles="@(AngularAppFiles)" DestinationFolder="$(WebsiteModulePath)\Angular\dist\%(RecursiveDir)" />

      <!-- Copy CSS. -->
      <Message Text="MSBUILD: copying @(CssFiles) to $(WebsiteModulePath)\css\" Importance="high"></Message>
      <Copy SourceFiles="@(CssFiles)" DestinationFolder="$(WebsiteModulePath)\css\%(RecursiveDir)" />

      <!-- Copy images. -->
      <Message Text="MSBUILD: copying @(ImageFiles) to $(WebsiteModulePath)\img\" Importance="high"></Message>
      <Copy SourceFiles="@(ImageFiles)" DestinationFolder="$(WebsiteModulePath)\img\%(RecursiveDir)" />

      <!-- Copy Ascx -->
      <Message Text="MSBUILD: copying @(AscxFiles) to $(WebsiteModulePath)" Importance="high"></Message>
      <Copy SourceFiles="@(AscxFiles)" DestinationFolder="$(WebsiteModulePath)\%(RecursiveDir)" />

      <!-- Copy Html -->
      <Message Text="MSBUILD: copying @(HtmlFiles) to $(WebsiteModulePath)" Importance="high"></Message>
      <Copy SourceFiles="@(HtmlFiles)" DestinationFolder="$(WebsiteModulePath)\Angular\src\%(RecursiveDir)" />

    </Target>

    <!-- Copy Binaries -->
    <!-- Copies binaries to the DNN bin folder. -->
    <Target Name="CopyBin" Condition="'$(Configuration)|$(Platform)' == 'Debug|AnyCPU'">
        <!--copy binaries to webite bin folder-->
        <Message Text="MSBUILD: copying @(BinFiles) to $(WebsitePath)\bin\" Importance="high"></Message>
        <Copy SourceFiles="@(BinFiles)" DestinationFolder="$(WebsitePath)\bin\%(RecursiveDir)" />
        <Message Text="MSBUILD: copying $(ModuleBinPath)\$(AssemblyName).pdb to $(WebsitePath)\bin\" Importance="high"></Message>
        <Copy SourceFiles="$(ModuleBinPath)\$(AssemblyName).pdb" DestinationFolder="$(WebsitePath)\bin" />
    </Target>

    <!-- Debug -->
    <!-- Copies modules other files to module folder during development. -->
    <Target Name="DebugProject" Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
        <!-- Copy module files to module folder in website. -->
        <Message Text="MSBUILD: copying @(DebugSourceFiles) to $(WebsiteModulePath)\" Importance="high"></Message>
        <Copy SourceFiles="@(DebugSourceFiles)" DestinationFolder="$(WebsiteModulePath)\%(RecursiveDir)" />
    </Target>

    <!-- Update DNN Components -->
    <!-- Not entirely sure if this does anything currently. -->
    <Target Name="UpdateComponents" Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <Message Text="MSBUILD: Updating Assembly Component in Module Manifest ($(MSBuildProjectDirectory)\$(DNNFileName))" Importance="high"></Message>
        <!--Get list of all assemblies in bin folder. These are all the referenced assemblies-->
        <CreateItem Include="$(ModuleBinPath)\*.dll">
            <Output TaskParameter="Include" ItemName="assemblyFiles" />
        </CreateItem>
        <!--since the .dnn file will be readonly by default, because it is checked in, we need to copy it first -->
        <CreateItem Include="$(MSBuildProjectDirectory)\$(DNNFileName)">
            <Output TaskParameter="Include" ItemName="PackageManifestFile" />
        </CreateItem>
        <Copy SourceFiles="@(PackageManifestFile)" DestinationFolder="$(PackageTempPath)" />
        <!--update dnn file with all correct assembly references-->
        <AssemblyComponent ManifestFile="$(PackageTempPath)\$(DNNFileName)"
                         Path="bin" Files="@(assemblyFiles)">
        </AssemblyComponent>
    </Target>

    <!-- Package Module -->
    <!-- Creates an installable module .zip file. -->
    <Target Name="PackageModule" Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
      <!--Package module-->
      <XmlRead Prefix="n"
                      Namespace="http://schemas.microsoft.com/developer/msbuild/2003"
                      XPath="dotnetnuke/packages/package[1]/@version"
                      XmlFileName="$(DNNFileName)">
        <Output TaskParameter="Value" PropertyName="Version" />
      </XmlRead>
      
      <!-- We should define InstallPackage after we read in the version, otherwise it'll always be 1.0.0.0 -->
      <PropertyGroup>
        <InstallPackage>$(PackageName)_$(Version)_Install.zip</InstallPackage>
      </PropertyGroup>
      <Message Text="MSBUILD: Creating Install Package >> $(PackagePath)\$(InstallPackage)" Importance="high"></Message>

        <!-- AN: 'DefaultExclude' never referenced. Ditch it? -->
        <!--<ItemGroup>
            <DefaultExclude Include="**\.svn\**" />
            <DefaultExclude Include="**\bin\**" />
            <DefaultExclude Include="**\obj\**" />
            <DefaultExclude Include="**\Release\**" />
            <DefaultExclude Include="**\Debug\**" />
            <DefaultExclude Include="**\Test\**" />
            <DefaultExclude Include="**\TestResults\**" />
            <DefaultExclude Include="**\doc\**" />
            <DefaultExclude Include="**\www\**" />
            <DefaultExclude Include="**\*.user" />
            <DefaultExclude Include="**\*.suo" />
            <DefaultExclude Include="**\*.zip" />
            <DefaultExclude Include="**\*.txt" />
            <DefaultExclude Include="**\*ReSharper.*\**" />
        </ItemGroup>-->

        <ItemGroup>
            <InstallInclude Include="$(TempBuildPath)\**\*.ascx" />
            <InstallInclude Include="$(TempBuildPath)\**\*.asmx" />
            <InstallInclude Include="$(TempBuildPath)\**\*.css" />
            <InstallInclude Include="$(TempBuildPath)\**\*.html" />
            <InstallInclude Include="$(TempBuildPath)\**\*.htm" />
            <InstallInclude Include="$(TempBuildPath)\**\*.resx" />
            <InstallInclude Include="$(TempBuildPath)\**\*.aspx" />
            <InstallInclude Include="$(TempBuildPath)\**\*.js" Exclude="$(TempBuildPath)\Angular\**" />
            <InstallInclude Include="$(TempBuildPath)\**\*.txt"  Exclude="$(TempBuildPath)\**\obj\**;$(TempBuildPath)\**\_ReSharper*\**;" />
            <InstallInclude Include="$(TempBuildPath)\**\images\**\*.*" />
            <InstallInclude Include="$(TempBuildPath)\**\img\*.*" />
            <InstallInclude Include="$(TempBuildPath)\**\fonts\**\*.*" />

            <InstallAngularDist Include="$(TempBuildPath)\Angular\dist\**\*" />
        </ItemGroup>

        <!-- AN: 'SourceInclude' never referenced. Ditch it? -->
        <!--<ItemGroup>
            <SourceInclude Include="**\*.ascx" />
            <SourceInclude Include="**\*.asmx" />
            <SourceInclude Include="**\*.css" />
            <SourceInclude Include="**\*.xsl" />
            <SourceInclude Include="**\*.html" />
            <SourceInclude Include="**\*.htm" />
            <SourceInclude Include="**\*.resx" />
            <SourceInclude Include="**\*.xml" Exclude="**\obj\**;**\_ReSharper*\**;" />
            <SourceInclude Include="**\*.aspx" />
            <SourceInclude Include="**\*.js" />
            <SourceInclude Include="**\*.txt" Exclude="**\obj\**;**\_ReSharper*\**;" />
            <SourceInclude Include="**\images\*.*" />
            <SourceInclude Include="**\*.cs" />
            <SourceInclude Include="**\*.cs.designer" />
            <SourceInclude Include="**\*.csproj" />
            <SourceInclude Include="**\*.targets" />
            <SourceInclude Include="**\*.sln" />
        </ItemGroup>-->

        <CreateItem Include="$(TempBuildPath)\**\License.txt">
            <Output TaskParameter="Include" ItemName="PackageTxtFiles" />
        </CreateItem>

        <CreateItem Include="$(TempBuildPath)\**\ReleaseNotes.txt">
            <Output TaskParameter="Include" ItemName="PackageTxtFiles" />
        </CreateItem>

        <CreateItem Include="$(TempBuildPath)\**\*.sqldataprovider">
            <Output TaskParameter="Include" ItemName="SqlDataProviderFiles" />
        </CreateItem>

        <CreateItem Include="$(ModuleBinPath)\*.dll">
            <Output TaskParameter="Include" ItemName="Assemblies" />
        </CreateItem>
        <Copy SourceFiles="@(Assemblies)" DestinationFolder="$(PackageTempPath)\bin"/>
        <Copy SourceFiles="@(SqlDataProviderFiles)" DestinationFolder="$(PackageTempPath)\%(RecursiveDir)" />
        <Copy SourceFiles="@(PackageTxtFiles)" DestinationFolder="$(PackageTempPath)" />

        <!-- create the INSTALL RESOURCES.ZIP file -->
        <Copy SourceFiles="@(InstallInclude)" DestinationFolder="$(MSBuildProjectDirectory)\ResourcesZip\%(RecursiveDir)" />
        <Copy SourceFiles="@(InstallAngularDist)" DestinationFolder="$(MSBuildProjectDirectory)\ResourcesZip\Angular\dist\%(RecursiveDir)" />

        <CreateItem Include="$(MSBuildProjectDirectory)\ResourcesZip\**\*.*">
            <Output TaskParameter="Include" ItemName="ResourcesContent" />
        </CreateItem>

        <Zip Files="@(ResourcesContent)" WorkingDirectory="$(MSBuildProjectDirectory)\ResourcesZip" ZipFileName="$(ResourceZip)" />
        <Delete Files="package\$(ResourceZip)" />
        <Move SourceFiles="$(MSBuildProjectDirectory)\$(ResourceZip)" DestinationFolder="package/" />

        <!-- Create the Install package -->
        <CreateItem Include="$(PackageTempPath)\**\*.*">
            <Output TaskParameter="Include" ItemName="OutputContent" />
        </CreateItem>

        <Zip Files="@(OutputContent)" WorkingDirectory="$(PackageTempPath)" ZipFileName="$(InstallPackage)" />
        <Delete Files="$(PackagePath)\$(InstallPackage)" />
        <Move SourceFiles="$(MSBuildProjectDirectory)\$(InstallPackage)" DestinationFolder="$(PackagePath)" />

        <!-- Cleanup temp folders -->
        <RemoveDir Directories ="$(PackageTempPath)" />
        <RemoveDir Directories ="$(MSBuildProjectDirectory)\ResourcesZip" />

    </Target>
</Project>